name: local-mongo-instance
services:
  nginx:
    build:
      context: ../api-gateway
      dockerfile: Dockerfile
    networks:
      - backend
    ports:
      - 80:80

  user:
    build:
      context: ./user-service
      dockerfile: Dockerfile
      args:
        - PORT=${PORT_USER}
    ports:
      - ${PORT_USER}:${PORT_USER}
    networks:
      - backend
      - mongo-net
    environment:
      - ENV
      - DB_CLOUD_URI=${DB_URI_USER}
      - DB_LOCAL_URI=${DB_URI_USER}
      - JWT_SECRET
    depends_on:
      - mongo

  questions:
    build:
      context: ./question-service
      dockerfile: Dockerfile
      args:
        - PORT=${PORT_QUESTION}
    ports:
      - ${PORT_QUESTION}:${PORT_QUESTION}
    networks:
      - backend
      - mongo-net
    environment:
      - ENV
      - DB_CLOUD_URI=${DB_URI_QUESTION}
    depends_on:
      - mongo
  
  mongo:
    container_name: mongo
    image: mongo
    command: mongod --port 27018
    ports:
      - "27018:27018"
    networks:
      - mongo-net
    volumes:
      - mongo:/data/db

  collaboration:
    build:
      context: ./collaboration-service
      dockerfile: Dockerfile
      args:
        - PORT=${PORT_COLLABORATION}
    ports:
      - ${PORT_COLLABORATION}:${PORT_COLLABORATION}
  
  matching-redis:
    image: redis
    networks:
      - matching
    expose:
      - 6379

  matching:
    build:
      context: ./matching-service
      dockerfile: Dockerfile
      args:
        - PORT=${PORT_MATCHING}
    ports:
      - ${PORT_MATCHING}:${PORT_MATCHING}
    depends_on:
      - matching-redis
    networks:
      - matching
      - backend
    environment:
      - REDIS_URL=redis://matching-redis:6379

networks:
  matching:
    driver: bridge
  backend:
    driver: bridge
  mongo-net:
    driver: bridge

volumes:
  mongo: