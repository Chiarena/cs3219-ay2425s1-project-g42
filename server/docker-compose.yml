services:
  gateway:
    build:
      context: ../api-gateway
      dockerfile: Dockerfile
    networks:
      - backend
    ports:
      - "80:80"

  user:
    build:
      context: ./user-service
      dockerfile: Dockerfile
      args:
        - PORT=${PORT_USER}
    ports:
      - ${PORT_USER}:${PORT_USER}
    networks:
      - backend
    environment:
      - ENV
      - DB_CLOUD_URI=${DB_URI_USER}
      - DB_LOCAL_URI=${DB_URI_USER}
      - JWT_SECRET

  questions:
    build:
      context: ./question-service
      dockerfile: Dockerfile
      args:
        - PORT=${PORT_QUESTION}
    ports:
      - ${PORT_QUESTION}:${PORT_QUESTION}
    networks:
      - backend
    environment:
      - ENV
      - DB_CLOUD_URI=${DB_URI_QUESTION}

  history-service:
    build:
      context: ./history-service  
      dockerfile: Dockerfile       
      args:
        - PORT=${PORT_HISTORY}
    ports:
      - ${PORT_HISTORY}:${PORT_HISTORY}
    environment:
      - ENV
      - DB_URI_HISTORY=${DB_URI_HISTORY}

    depends_on:
      - matching-redis
    networks:
      - matching
  collaboration:
    build:
      context: ./collaboration-service
      dockerfile: Dockerfile
      args:
        - PORT=${PORT_COLLABORATION}
    networks:
      - backend
    ports:
      - ${PORT_COLLABORATION}:${PORT_COLLABORATION}

  matching-redis:
    image: redis
    networks:
      - matching
    expose:
      - 6379

  matching:
    build:
      context: ./matching-service
      dockerfile: Dockerfile
      args:
        - PORT=${PORT_MATCHING}
    ports:
      - ${PORT_MATCHING}:${PORT_MATCHING}
    depends_on:
      - matching-redis
    networks:
      - matching
      - backend
    environment:
      - REDIS_URL=redis://matching-redis:6379
  ai:
    build:
      context: ./ai-service
      dockerfile: Dockerfile
      args:
        - PORT=${PORT_AI}
    ports:
      - ${PORT_AI}:${PORT_AI}
    networks:
      - backend
    environment:
      - ENV
      - GEMINI_API_KEY=${GEMINI_API_KEY}
  chat:
    build: 
      context: ./chat-service
      dockerfile: Dockerfile
      args:
        - PORT=${PORT_CHAT}
    networks:
      - backend
    ports:
      - ${PORT_CHAT}:${PORT_CHAT}

networks:
  matching:
    driver: bridge
  backend:
    driver: bridge
